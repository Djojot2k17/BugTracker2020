@using Microsoft.AspNetCore.Identity
@using BugTracker2020.Services
@model IEnumerable<BugTracker2020.Models.Project>
@inject UserManager<BTUser> UserManager
@inject IBTProjectsService ProjectsService
@inject IBTAccessService AccessService

@{
  ViewData["Title"] = "Projects Index";
  var userId = UserManager.GetUserId(User);
  var roleName = (await UserManager.GetRolesAsync(await UserManager.GetUserAsync(User))).FirstOrDefault();
  //var user = await UserManager.GetUserAsync(User);
  //var roleName2 = (await UserManager.GetRolesAsync(user)).FirstOrDefault();
  //string userId2 = user.Id;
}

<div class="p-5 h-100 rounded text-white" style="background: url(/assets/media/bg/bg-2.jpg); background-size: cover; border-top-left-radius: 0 !important;">
  <div class="d-flex justify-content-between py-3">
    <h1>All Projects</h1>
    <p>
      @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
      {
        <a data-toggle="modal" data-target="#createProject" class="btn btn-dark border">Create New</a>
      }
      @if (!User.IsInRole("Admin") && !User.IsInRole("Submitter"))
      {
        <a asp-action="MyProjects" class="btn btn-dark border">My Projects</a>
      }
    </p>
  </div>
  <div class="modal fade" id="createProject" tabindex="-1">
    <div class="modal-dialog">
      <div class="modal-content bg-dark">
        <div class="modal-header">
          <h5 class="modal-title text-white">Create New Project</h5>
        </div>
        <div class="modal-body">
          @{ var singleModel = Model.FirstOrDefault(); }
          <form asp-controller="Projects" asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
              <label for="projectName" class="control-label text-white">Project Name</label>
              <input name="projectName" class="form-control" />
              <span asp-validation-for="@singleModel.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
              <label class="text-white">Upload Project Image</label>
              <div></div>
              <div class="custom-file">
                <input type="file" name="projectImage" class="custom-file-input" id="customFile" />
                <label class="custom-file-label" for="customFile">Choose file</label>
              </div>
            </div>
            <div class="form-group d-flex justify-content-end">
              <input type="submit" value="Create" class="btn btn-outline-primary mr-2" />
              <button type="button" class="btn btn-outline-light text-white text-hover-dark" data-dismiss="modal">Close</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
  <div class="bg-dark-o-80 p-3 shadow-lg">
    <table class="table text-center shadow bg-white-o-20 w-100 table-bordered">
      <thead class="bg-dark">
        <tr>
          <th>
            Project Name
          </th>
          <th>
            Assigned Users
          </th>
          <th>
            Project Image
          </th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        @foreach (var item in Model)
        {
          <tr>
            <td style="vertical-align: middle;">
              @Html.DisplayFor(modelItem => item.Name)
            </td>
            @{ var usersOnProject = ProjectsService.UsersOnProject(item.Id).Result; }
            <td style="vertical-align: middle;">
              @if (usersOnProject.Count != 0)
              {
                @foreach (var user in usersOnProject)
                {
                  <ul class="list-group list-group-flush">
                    <li class="list-group-item bg-transparent">
                      @*FIGURE OUT HOW TO REMOVE USER PROJECTS WITH A POST METHOD*@
                      @user.FullName
                    </li>
                  </ul>
                }
              }
              else
              {
                <ul class="list-group list-group-flush">
                  <li class="list-group-item bg-transparent">No Users Assigned</li>
                </ul>
              }
            </td>
            <td style="vertical-align: middle;">
              @if (item.ImageData == null)
              {
                <span>No Image Uploaded</span>
              }
              else
              {
                <a class="btn btn-outline-light text-white" data-toggle="modal" data-target="#image-@item.Id">View Image</a>
                <div class="modal fade" id="image-@item.Id">
                  <div class="modal-dialog modal-xl">
                    <div class="modal-content bg-dark">
                      <div class="modal-header">
                        <h5 class="modal-title text-gray-200">Project Image for @item.Name</h5>
                      </div>
                      <div class="modal-body">
                        <img src="@item.ImagePath" alt="@item.ImagePath" class="img-fluid">
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-outline-light text-white" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>
              }
            </td>
            <td style="vertical-align: middle;">
              @if (await AccessService.CanAccessProject(userId, item.Id, roleName))
              {
                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-info">Edit</a>
                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info">Details</a>
                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger">Delete</a>
              }
            </td>
          </tr>
        }
      </tbody>
    </table>
  </div>
</div>
